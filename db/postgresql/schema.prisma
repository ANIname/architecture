generator client {
  provider        = "prisma-client-js"
  binaryTargets   = "rhel-openssl-1.0.x"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        String  @id @default(uuid())
  discordId String? @unique

  games Game[]

  gender UserGender @default(preferNotToSay)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
}

model Game {
  id     String  @id @default(uuid())
  userId String
  title  GameName

  gonnaBeLucky      GameGonnaBeLucky?
  rockPaperScissors GameRockPaperScissors?

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?

  @@unique([userId, title])
}

model GameGonnaBeLucky {
  id     String  @id @default(uuid())
  gameId String @unique

  points Int

  events GameGonnaBeLuckyEvent[]
  game   Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
}

model GameGonnaBeLuckyEvent {
  id                 String  @id @default(uuid())
  gameGonnaBeLuckyId String

  data        String
  declination String

  points   Int

  gonnaBeLucky GameGonnaBeLucky @relation(fields: [gameGonnaBeLuckyId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
}

model GameRockPaperScissors {
  id     String  @id @default(uuid())
  gameId String @unique

  points Int

  events GameRockPaperScissorsEvent[]
  game   Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
}

model GameRockPaperScissorsEvent {
  id                      String  @id @default(uuid())
  gameRockPaperScissorsId String
  winnersIds              String[]
  losersIds               String[]

  choice GameRockPaperScissorsChoice
  status GameRockPaperScissorsEventStatus

  points Int

  rockPaperScissors GameRockPaperScissors @relation(fields: [gameRockPaperScissorsId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  deletedAt DateTime?
}

enum GameName {
  gonnaBeLucky
  rockPaperScissors
}

enum GameRockPaperScissorsChoice {
  rock
  paper
  scissors
}

enum GameRockPaperScissorsEventStatus {
  win
  lose
  draw
}

enum UserGender {
  male
  female
  other
  preferNotToSay
}